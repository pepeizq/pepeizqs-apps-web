@using BaseDatos
@using Listados
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.Data.SqlClient

@{
	string descripcion = Herramientas.Idiomas.BuscarTexto(idioma, "String1", proyecto.Id);
	string titulo = proyecto.Nombre + " • " + descripcion;
	string enlace = "https://pepeizqapps.com" + proyecto.Ubicacion;
	string imagen = "https://pepeizqapps.com/imagenes/" + proyecto.Id + "/logo.webp";
	string keywords = "source code";

	if (string.IsNullOrEmpty(descripcion) == false)
	{
		string[] keywordsEnBruto = Herramientas.Buscador.LimpiarNombre(titulo, false).Split(' ');
		List<string> keywordsLista = new List<string>();
		keywordsLista.AddRange(keywordsEnBruto);

		foreach (string keyword in keywordsLista)
		{
			if (keyword.Length > 3 && keywords.Contains(keyword) == false)
			{
				keywords = keywords + ", " + keyword;
			}
		}
	}

	<HeadContent>
		<meta name="og:title" Content="@titulo" />
		<meta name="description" content="@descripcion" />
		<meta name="og:description" content="@descripcion" />
		<meta name="og:url" content="@enlace" />
		<meta name="og:image" content="@imagen" />
		<meta name="og:site_name" content="pepeizq's apps" />
		<meta name="og:type" content="website" />
		<meta name="robots" content="index, follow" />
		<meta name="keywords" content="@keywords" />

		<script type="application/ld+json">
			{
			  "@@context": "https://schema.org",
			  "@@type": "SoftwareApplication",
			  "name": "@proyecto.Nombre",
			  "description": "@descripcion",
			  "operatingSystem": "WINDOWS",
			  "applicationCategory": "UtilitiesApplication",
			  "offers": {
				"@@type": "Offer",
				"price": 1.99,
				"priceCurrency": "EUR"
			  },
			  "aggregateRating": {
				"@@type": "AggregateRating",
				"ratingValue": 4.5,
				"ratingCount": 10
			  }
			}
		</script>

		<link rel="canonical" href="@enlace" />
	</HeadContent>
}

<style>
	.boton-github {
		transition: transform .5s;
	}

		.boton-github:hover {
			transform: scale(1.01);
		}
</style>

<div style="background-color: @proyecto.Color1; display: flex; align-items: center; background-size: cover; background-image: linear-gradient(to right, @proyecto.Color1 50%, transparent), url('/imagenes/@proyecto.Id/captura2.webp');">
	@if (string.IsNullOrEmpty(proyecto.Enlace) == false)
	{
		<a href="@proyecto.Enlace" target="_blank">
			<img src="@Herramientas.Imagenes.ServidorExterno("/imagenes/" + @proyecto.Id + "/logo.webp", 140, 140)" style="width: 140px; height: 140px;" />
		</a>
	}
	else
	{
		<img src="@Herramientas.Imagenes.ServidorExterno("/imagenes/" + @proyecto.Id + "/logo.webp", 140, 140)" style="width: 140px; height: 140px;" />
	}

	<div style="padding: 20px 30px;">
		<h1 style="font-size: 22px;">@proyecto.Nombre</h1>
		<div style="margin-top: 10px;">@Herramientas.Idiomas.BuscarTexto(idioma, "String1", proyecto.Id)</div>

		@if (string.IsNullOrEmpty(proyecto.Enlace) == false)
		{
			<div style="margin-top: 10px;">
				<a href="@proyecto.Enlace" target="_blank" style="text-decoration: none;">@proyecto.Enlace</a>
			</div>
		}
	</div>
</div>

<div style="background-color: @proyecto.Color2; overflow: hidden;">
	<a href="https://github.com/pepeizq/@proyecto.Github" target="_blank" style="text-decoration: none;">
		<div class="boton-github" style="background-color: #24292e; color: var(--colorTexto); display: flex; align-items: center; padding: 15px 25px;" title="@Herramientas.Idiomas.BuscarTexto(idioma, "String7", "Github")">
			<svg style="width: 24px; height: 24px; fill: var(--colorTexto);" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512">
                <path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3 .3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5 .3-6.2 2.3zm44.2-1.7c-2.9 .7-4.9 2.6-4.6 4.9 .3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3 .7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3 .3 2.9 2.3 3.9 1.6 1 3.6 .7 4.3-.7 .7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3 .7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3 .7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z" />
            </svg>

			<div style="width: 100%; padding-left: 20px; padding-right: 20px; font-size: 15px;">
				@Herramientas.Idiomas.BuscarTexto(idioma, "String1", "Github")
			</div>

			<div style="text-align: right; display: flex; align-items: center; font-size: 14px;">
				<div>
					<svg style="width: 16px; height: 16px; fill: var(--colorTexto); float:left" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z"/></svg>
				</div>
				<div style="padding-left: 10px;">@github.Estrellas</div>

				<div style="padding-left: 20px;">
					<svg style="width: 16px; height: 16px; fill: var(--colorTexto); float:left" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M80 104a24 24 0 1 0 0-48 24 24 0 1 0 0 48zm80-24c0 32.8-19.7 61-48 73.3l0 38.7c0 17.7 14.3 32 32 32l160 0c17.7 0 32-14.3 32-32l0-38.7C307.7 141 288 112.8 288 80c0-44.2 35.8-80 80-80s80 35.8 80 80c0 32.8-19.7 61-48 73.3l0 38.7c0 53-43 96-96 96l-48 0 0 70.7c28.3 12.3 48 40.5 48 73.3c0 44.2-35.8 80-80 80s-80-35.8-80-80c0-32.8 19.7-61 48-73.3l0-70.7-48 0c-53 0-96-43-96-96l0-38.7C19.7 141 0 112.8 0 80C0 35.8 35.8 0 80 0s80 35.8 80 80zm208 24a24 24 0 1 0 0-48 24 24 0 1 0 0 48zM248 432a24 24 0 1 0 -48 0 24 24 0 1 0 48 0z"/></svg>				
				</div>
				<div style="padding-left: 10px;">@github.Forks</div>

				<div style="padding-left: 20px;">
					<svg style="width: 16px; height: 16px; fill: var(--colorTexto); float:left" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z"/></svg>
				</div>
				<div style="padding-left: 10px;">@github.Suscriptores</div>
			</div>
		</div>
	</a>
</div>

<div style="display: flex; flex-direction: column; background-color: var(--fondoEntrada); padding: 30px; gap: 30px;">
	@if (intro != null)
	{
		<div style="background-color: color-mix(in oklab, @proyecto.Color1 50%, var(--fondoOscuro)); border: 1px solid var(--fondoOscuro); padding: 40px;">
			<div>
				@Herramientas.Idiomas.BuscarTexto(idioma, "String" + intro.Texto1, proyecto.Id)
			</div>

			@if (string.IsNullOrEmpty(intro.Texto2) == false)
			{
				<div style="margin-top: 20px;">
					@Herramientas.Idiomas.BuscarTexto(idioma, "String" + intro.Texto2, proyecto.Id)
				</div>
			}
		</div>
	}

	@if (secciones != null)
	{
		int i = 0;

		foreach (var modulo in secciones)
		{
			string fondo = "background-color: color-mix(in oklab, " + proyecto.Color2 + " 50%, var(--fondoOscuro));";

			i += 1;

			if (i == 2)
			{
				fondo = "background-color: color-mix(in oklab, " + proyecto.Color1 + " 50%, var(--fondoOscuro));";
				i = 0;
			}

			string captura = "/imagenes/" + proyecto.Id + "/captura" + modulo.Captura + ".webp";

			<div style="@fondo; padding: 40px; display: flex; align-items: center; gap: 50px;">
				<div style="display: flex; align-items: center; width: 40%; margin-left: auto; margin-right: auto;">
					<a @onclick="(e => CargarImagen(e, captura))" target="_self" style="text-align: center;">
						<img src="@Herramientas.Imagenes.ServidorExterno(captura)" class="expandir" style="width: 100%; border: 1px solid var(--colorEnlace); cursor: pointer;" alt="image" />
					</a>
				</div>

				<div style="width: 100%;">
					<div style="font-size: 20px;">@Herramientas.Idiomas.BuscarTexto(idioma, "String" + modulo.Texto1, proyecto.Id)</div>

					<div style="margin-top: 15px;">@Herramientas.Idiomas.BuscarTexto(idioma, "String" + modulo.Texto2, proyecto.Id)</div>
				</div>
			</div>
		}
	}
</div>

@if (string.IsNullOrEmpty(imagenAbierta) == false)
{
		<div style="height: 100%; width: 100%; left: 0; top: 0; overflow-x: auto; position: fixed; z-index: 10000; padding: 20px; backdrop-filter: blur(15px);">
			<div style="height: auto; width: auto;">
				<button style="color: var(--colorTextoVisitado); background-color: transparent; border: 0px;" @onclick="(e => CerrarImagen(e))">
					<svg xmlns="http://www.w3.org/2000/svg" style="width: 30px; height: 30px; fill: var(--colorTextoVisitado);" viewBox="0 0 384 512"><path d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"/></svg>
				</button>
		
				<img src="@Herramientas.Imagenes.ServidorExterno(imagenAbierta)" style="width: 100%; height: 100%; margin-top: 20px;" alt="image"/>
			</div>
		</div>
}

@code {

	#nullable disable

	[Parameter]
	public string idioma { get; set; }

	[Parameter]
	public string id { get; set; }

	[Parameter]
	public Modulos.Intro intro { get; set; }

	[Parameter]
	public List<Modulos.Seccion> secciones { get; set; }

	private string imagenAbierta = string.Empty;

	SqlConnection conexion = new SqlConnection();

	private Proyecto proyecto = new Proyecto();
	private GithubBaseDatos github = new GithubBaseDatos();

	protected override void OnInitialized()
	{
		proyecto = global::Listados.Proyectos.DevolverProyecto(id);

		if (conexion.State != System.Data.ConnectionState.Open)
		{
			conexion = Herramientas.BaseDatos.Conectar();
		}

		using (conexion)
		{
			github = BaseDatos.Github.Buscar(conexion, proyecto.Github);
		}
	}

	private void CargarImagen(MouseEventArgs e, string nuevaImagen)
	{
		imagenAbierta = nuevaImagen;
	}

	private void CerrarImagen(MouseEventArgs e)
	{
		imagenAbierta = string.Empty;
	}
}